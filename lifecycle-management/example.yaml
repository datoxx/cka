---
#configmap
apiVersion: v1
kind: ConfigMap
metadata:
  name: game-demo
data:
  # property-like keys; each key maps to a simple value
  APP_COLOR: blue
  APP_MOD: prod
  # file-like keys
  game.properties: |
    enemy.types=aliens,monsters
    player.maximum-lives=5    
  user-interface.properties: |
    color.good=purple
    color.bad=yellow
    allow.textmode=true  
---
#configmap for pod single evn variable
apiVersion: v1
kind: Pod
metadata:
  name: dapi-test-pod
spec:
  containers:
    - name: test-container
      image: gcr.io/google_containers/busybox
      env:
        - name: APP_COLOR  # from the key name in the ConfigMap.
          valueFrom:
            configMapKeyRef:
            name: webapp-config-map #ConfigMap name
            key: APP_COLOR  # from the key name in the ConfigMap.
            optional: true # mark the variable as optional
---
#configmap for pod  for full env
apiVersion: v1
kind: Pod
metadata:
  name: dapi-test-pod
spec:
  containers:
    - name: test-container
      image: gcr.io/google_containers/busybox
      envFrom:  # enter full config map
        - configMapKeyRef:
          name: a-config
  volumes:
  # You set volumes at the Pod level, then mount them into containers inside that Pod
  - name: config
    configMap:
      # Provide the name of the ConfigMap you want to mount.
      name: game-demo
      # An array of keys from the ConfigMap to create as files
      items:
      - key: "game.properties"
        path: "game.properties"
      - key: "user-interface.properties"
        path: "user-interface.properties"

---
# secrets  in pod 
apiVersion: v1
kind: Pod
metadata:
  name: dapi-test-pod
spec:
  containers:
    - name: test-container
      image: gcr.io/google_containers/busybox
      envFrom:  # enter full secret 
        - secretRef:
          name: a-config #secret name
---
#secret  for pod single evn variable
apiVersion: v1
kind: Pod
metadata:
  name: dapi-test-pod
spec:
  containers:
    - name: test-container
      image: gcr.io/google_containers/busybox
      env:
        - name: APP_COLOR  # from the key name in the secret.
          valueFrom:
            secretKeyRef:
            name: webapp-config-map #secret name
            key: APP_COLOR  # from the key name in the secret.
  volumes:
  # You set volumes at the Pod level, then mount them into containers inside that Pod
  - name: secret
    secret:
      # Provide the name of the secret you want to mount.
      secretName: dotfile-secret
---
#multi container pod with volumes 
apiVersion: v1
kind: Pod
metadata:
  name: app
  namespace: elastic-stack
  labels:
    name: app
spec:
  containers:
  - name: app
    image: kodekloud/event-simulator
    volumeMounts:
    - mountPath: /log
      name: log-volume

  - name: sidecar
    image: kodekloud/filebeat-configured
    volumeMounts:
    - mountPath: /var/log/event-simulator/
      name: log-volume

  volumes:
  - name: log-volume
    hostPath:
      # directory location on host
      path: /var/log/webapp
      # this field is optional
      type: DirectoryOrCreate